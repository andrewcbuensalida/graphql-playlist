{"version":3,"sources":["queries/queries.js","components/BookDetails.js","components/BookList.js","components/AddBook.js","App.js","index.js"],"names":["getAuthorsQuery","gql","getBooksQuery","addBookMutation","getBookQuery","BookDetails","book","this","props","data","name","genre","author","className","books","map","item","id","displayBookDetails","Component","graphql","options","variables","bookId","BookList","state","selected","loading","onClick","e","setState","displayBooks","AddBook","authorId","disabled","authors","value","preventDefault","refetchQueries","query","onSubmit","submitForm","bind","type","onChange","target","displayAuthors","compose","client","ApolloClient","uri","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50f480c9.chunk.js","sourcesContent":["import { gql } from 'apollo-boost';\r\n\r\nconst getAuthorsQuery = gql`\r\n    {\r\n        authors {\r\n            name\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nconst getBooksQuery = gql`\r\n    {\r\n        books {\r\n            name\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nconst addBookMutation = gql`\r\n    mutation AddBook($name: String!, $genre: String!, $authorId: ID!){\r\n        addBook(name: $name, genre: $genre, authorId: $authorId){\r\n            name\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nconst getBookQuery = gql`\r\n    query GetBook($id: ID){\r\n        book(id: $id) {\r\n            id\r\n            name\r\n            genre\r\n            author {\r\n                id\r\n                name\r\n                age\r\n                books {\r\n                    name\r\n                    id\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport { getAuthorsQuery, getBooksQuery, addBookMutation, getBookQuery };\r\n","import React, { Component } from 'react';\r\nimport { graphql } from 'react-apollo';\r\nimport { getBookQuery } from '../queries/queries';\r\n\r\nclass BookDetails extends Component {\r\n    displayBookDetails(){\r\n        const { book } = this.props.data;\r\n        if(book){\r\n            return(\r\n                <div>\r\n                    <h2>{ book.name }</h2>\r\n                    <p>{ book.genre }</p>\r\n                    <p>{ book.author.name }</p>\r\n                    <p>All books by this author:</p>\r\n                    <ul className=\"other-books\">\r\n                        { book.author.books.map(item => {\r\n                            return <li key={item.id}>{ item.name }</li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            );\r\n        } else {\r\n            return( <div>No book selected...</div> );\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div id=\"book-details\">\r\n                { this.displayBookDetails() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(getBookQuery, {\r\n    options: (props) => {\r\n        return {\r\n            variables: {\r\n                id: props.bookId\r\n            }\r\n        }\r\n    }\r\n})(BookDetails);\r\n","import React, { Component } from 'react';\r\nimport { graphql } from 'react-apollo';\r\nimport { getBooksQuery } from '../queries/queries';\r\n\r\n// components\r\nimport BookDetails from './BookDetails';\r\n\r\nclass BookList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selected: null\r\n        }\r\n    }\r\n    displayBooks(){\r\n        var data = this.props.data;\r\n        if(data.loading){\r\n            return( <div>Loading books...</div> );\r\n        } else {\r\n            return data.books.map(book => {\r\n                return(\r\n                    <li key={ book.id } onClick={ (e) => this.setState({ selected: book.id }) }>{ book.name }</li>\r\n                );\r\n            })\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <ul id=\"book-list\">\r\n                    { this.displayBooks() }\r\n                </ul>\r\n                <BookDetails bookId={ this.state.selected } />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(getBooksQuery)(BookList);\r\n","import React, { Component } from \"react\";\r\nimport { graphql } from \"react-apollo\";\r\nimport * as compose from \"lodash.flowright\";\r\n\r\nimport {\r\n\tgetAuthorsQuery,\r\n\taddBookMutation,\r\n\tgetBooksQuery,\r\n} from \"../queries/queries\";\r\n\r\nclass AddBook extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tname: \"\",\r\n\t\t\tgenre: \"\",\r\n\t\t\tauthorId: \"\",\r\n\t\t};\r\n\t}\r\n\tdisplayAuthors() {\r\n\t\tvar data = this.props.getAuthorsQuery;\r\n\t\tif (data.loading) {\r\n\t\t\treturn <option disabled>Loading authors</option>;\r\n\t\t} else {\r\n\t\t\treturn data.authors.map((author) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<option key={author.id} value={author.id}>\r\n\t\t\t\t\t\t{author.name}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tsubmitForm(e) {\r\n\t\te.preventDefault();\r\n\t\t// use the addBookMutation\r\n\t\tthis.props.addBookMutation({\r\n\t\t\tvariables: {\r\n\t\t\t\tname: this.state.name,\r\n\t\t\t\tgenre: this.state.genre,\r\n\t\t\t\tauthorId: this.state.authorId,\r\n\t\t\t},\r\n\t\t\trefetchQueries: [{ query: getBooksQuery }],\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form id=\"add-book\" onSubmit={this.submitForm.bind(this)}>\r\n\t\t\t\t<div className=\"field\">\r\n\t\t\t\t\t<label>Book name:</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tonChange={(e) => this.setState({ name: e.target.value })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"field\">\r\n\t\t\t\t\t<label>Genre:</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tonChange={(e) => this.setState({ genre: e.target.value })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"field\">\r\n\t\t\t\t\t<label>Author:</label>\r\n\t\t\t\t\t<select onChange={(e) => this.setState({ authorId: e.target.value })}>\r\n\t\t\t\t\t\t<option>Select author</option>\r\n\t\t\t\t\t\t{this.displayAuthors()}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button>+</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\tgraphql(getAuthorsQuery, { name: \"getAuthorsQuery\" }),\r\n\tgraphql(addBookMutation, { name: \"addBookMutation\" })\r\n)(AddBook);\r\n","import React, { Component } from \"react\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\n\r\n// components\r\nimport BookList from \"./components/BookList\";\r\nimport AddBook from \"./components/AddBook\";\r\n\r\nconst uri =\r\n\tprocess.env.NODE_ENV === \"production\"\r\n\t\t? \"/graphql\"\r\n\t\t: \"http://localhost:4000/graphql\";\r\n// apollo client setup\r\nconst client = new ApolloClient({\r\n\turi: uri,\r\n});\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ApolloProvider client={client}>\r\n\t\t\t\t<div id=\"main\">\r\n\t\t\t\t\t<h1>Love's Book List</h1>\r\n\t\t\t\t\t<BookList />\r\n\t\t\t\t\t<AddBook />\r\n\t\t\t\t</div>\r\n\t\t\t</ApolloProvider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}